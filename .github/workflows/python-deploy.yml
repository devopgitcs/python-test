name: Deploy Python App to Azure (OIDC) with Slots

env:
  AZURE_WEBAPP_PACKAGE_PATH: 'app.zip'
  PYTHON_VERSION: '3.9'
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

defaults:
  run:
    working-directory: '.'

permissions:
  contents: read
  id-token: write

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: css-new-runner2
    outputs:
      secrets-valid: ${{ steps.secrets-valid.outputs.isvalid }}
    steps:
      - uses: actions/checkout@v3

      - id: secrets-valid
        env:
          azure-webapp-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          if [ -z "$azure-webapp-name" ] || [ -z "$azure-subscription-id" ]; then
            echo "isvalid=false" >> $GITHUB_OUTPUT
          else
            echo "isvalid=true" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: css-new-runner2
    needs: check-secrets
    if: needs.check-secrets.outputs.secrets-valid == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Start the app in the background and test its response.
          python app.py &
          sleep 3
          curl -f http://localhost:8000
          echo "Tests passed!"

      - name: Package application for deployment
        run: zip -r app.zip .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: app.zip

  deploy:
    runs-on: css-new-runner2
    needs: [build, check-secrets]
    if: needs.check-secrets.outputs.secrets-valid == 'true'
    strategy:
      matrix:
        environment: [ production, staging ]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Authenticate with Azure using OIDC
      - name: Azure Login (OIDC)
        uses: azure/login@v1.5.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      
      # Deploy to Production slot if environment is "production" (default slot)
      - name: Deploy to Azure Web App (Production)
        if: matrix.environment == 'production'
        id: deploy-to-webapp-prod
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      # Deploy to a non-production slot (dev, qa, or staging)
      - name: Deploy to Azure Web App Slot
        if: matrix.environment != 'production'
        id: deploy-to-webapp-slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: ${{ matrix.environment }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
